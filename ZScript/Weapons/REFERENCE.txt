class Shotgun1 : Weapon Replaces Shotgun
{
	bool raised; //Detects whether or not the gun is raised and ready to fire.

    Default
	{
		Weapon.KickBack 50;
		Weapon.AmmoType "Shell";
		Weapon.BobStyle "InverseSmooth";
		Weapon.BobSpeed 2.5;
		Weapon.BobRangeY 0.5;
		Weapon.BobRangeX 0.5;
		Weapon.SlotNumber 3;
		Scale 0.7;
		Inventory.PickupMessage "Picked up a Shotgun.";
	}

    States
    {
      	Spawn:
			SHT1 Z -1;
			Loop;
		Deselect:
			SHT1 AAAAA 1 A_WeaponOffset(-10,10,WOF_INTERPOLATE|WOF_ADD);
			//^ I love that animations can be optimized like this..
			//The line above used to be 5 total lines of code.
			//This was until I experimented with crunching it down to just 1
			//by just inserting extra frames. Works just as good as I'd like.
			//Incredible..
			SHT1 A 1 A_Lower();
			Wait;
		Select:
			SHT1 A 1 A_Raise();
			SHT1 A 1 A_WeaponOffset(-50,50,WOF_INTERPOLATE|WOF_ADD);
			SHT1 AAAAA 1 A_WeaponOffset(10,-10,WOF_INTERPOLATE|WOF_ADD);
			Goto Ready;
		Ready:
			TNT1 A 0 A_JumpIfInventory("Z_TokenRaise", 1, "Raised");
			Goto Lowered;
		Lower:
			SHT1 BBBBBBBBBB 1 A_WeaponOffset(-2,2,WOF_INTERPOLATE|WOF_ADD);
			SHT1 A 1;
			TNT1 A 0 A_TakeInventory("Z_TokenRaise", 1);
			Goto Ready;
		Lowered:
		//Breathing animation.
			SHT1 A 20
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(0,0,WOF_INTERPOLATE|WOF_ADD);
			}
			SHT1 A 10
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(0,-1,WOF_INTERPOLATE|WOF_ADD);
			}
			SHT1 A 10
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(0,-2,WOF_INTERPOLATE|WOF_ADD);
			}
			SHT1 A 10
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(0,-3,WOF_INTERPOLATE|WOF_ADD);
			}
			SHT1 A 10
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(0,-2,WOF_INTERPOLATE|WOF_ADD);
			}
			SHT1 A 10
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(0,-1,WOF_INTERPOLATE|WOF_ADD);
			}
			Loop;
		Raise:
			TNT1 A 0 A_GiveInventory("Z_TokenRaise", 1);
			SHT1 AAAAAAAAAA 1 A_WeaponOffset(2,2,WOF_INTERPOLATE|WOF_ADD);
			SHT1 B 1;
			Goto Raised;
		Raised:
			SHT1 B 60 A_WeaponReady(WRF_ALLOWRELOAD);
			Goto Lower;
		FireRaised:
			TNT1 A 0 A_StartSound("Weapons/Shotguns/ShotgunFire",CHAN_WEAPON,CHANF_OVERLAP);
			TNT1 A 0 A_FireCustomMissile("GunSmokeSpawner", 0, 0, 8, 0);
			SHT1 BCDE 1
			{
				A_WeaponOffset(4,4,WOF_INTERPOLATE|WOF_ADD);
				A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
				A_ZoomFactor(0.975);
			}
			SHT1 EDCB 1
			{
				A_WeaponOffset(-4,-4,WOF_INTERPOLATE|WOF_ADD);
				A_SetPitch(pitch+0.5,SPF_INTERPOLATE);
				A_ZoomFactor(1.0);
			}
			SHT1 B 5;
			TNT1 A 0 A_GiveInventory("Z_TokenShotgunFired",1);
			Goto Ready;
		PumpRaised:
			TNT1 A 0 A_StartSound("Weapons/Shotguns/ShotgunPumpBackward",CHAN_WEAPON,CHANF_OVERLAP);
			SHT1 HIJKL 1
			{
				A_WeaponOffset(2,2,WOF_INTERPOLATE|WOF_ADD);
				A_SetRoll(roll-0.5,SPF_INTERPOLATE);
			}
			TNT1 A 0 A_StartSound("Weapons/Shotguns/ShotgunPumpForward",CHAN_WEAPON,CHANF_OVERLAP);
			SHT1 LKJIH 1
			{
				A_WeaponOffset(-2,-2,WOF_INTERPOLATE|WOF_ADD);
				A_SetRoll(roll+0.5,SPF_INTERPOLATE);
			}
			TNT1 A 0 A_SetRoll(0);
			TNT1 A 0 A_TakeInventory("Z_TokenShotgunFired",1);
			Goto Ready;
		Fire:
			TNT1 A 0 A_JumpIfInventory("Z_TokenShotgunFired",1,"PumpRaised");
			TNT1 A 0 A_JumpIfInventory("Z_TokenRaise",1,"FireRaised");
			Goto Raise;
		Reload:
			TNT1 A 0 A_JumpIfInventory("Z_TokenRaise",1,"ReloadStart");
			Goto Raise;
		ReloadStart:
			SHT1 BCDEFG 1
			{
				A_SetRoll(roll+0.5,SPF_INTERPOLATE);
			}
			SHT1 G 5;
			Goto ReloadContinue;
		ReloadContinue:
			TNT1 A 0 A_StartSound("Weapons/Shotguns/ShotgunShellLoad",CHAN_WEAPON,CHANF_OVERLAP);
			SHT1 GGG 1
			{
				A_WeaponOffset(-2,-2,WOF_INTERPOLATE|WOF_ADD);
				A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
			}
			SHT1 GGG 1
			{
				A_WeaponOffset(2,2,WOF_INTERPOLATE|WOF_ADD);
				A_SetPitch(pitch+0.2,SPF_INTERPOLATE);
			}
			SHT1 G 5;
			Goto ReloadEnd;
		ReloadEnd:
			SHT1 FEDCB 1
			{
				A_SetRoll(roll-0.5,SPF_INTERPOLATE);
			}
			TNT1 A 0 A_SetRoll(0);
			Goto Ready;
	}
}